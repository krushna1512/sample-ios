# Fastfile

# Determine if the environment is a Continuous Integration (CI) environment.
# GitHub Actions sets the 'CI' environment variable to 'true'.
is_ci = ENV["CI"] == "true"

# Configure the App Store Connect API Key for Fastlane.
# This key is used for authentication with Apple's services (e.g., Deliver, Match with API key).
api_key = app_store_connect_api_key(
  key_id: ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'], # The Key ID from your App Store Connect API Key
  issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'], # The Issuer ID from your App Store Connect API Key
  key_filepath: "~/private_keys/AuthKey_#{ENV['APP_STORE_CONNECT_API_KEY_KEY_ID']}.p8", # Path to the .p8 private key file
  in_house: false # Set to true if you are using an Enterprise Developer Account
)

# Define a Fastlane lane for building and uploading the app.
lane :build_and_upload do
  # Use the `match` action to fetch and install code signing certificates and provisioning profiles.
  # Match synchronizes your signing assets from a private Git repository.
  match(
    type: "development", # Specifies the type of provisioning profile to manage (e.g., "development", "adhoc", "appstore")
    app_identifier: "com.yapsody.SampleApp", # Your app's bundle identifier
    readonly: is_ci, # If true, match will not modify the git repository (e.g., create new certs/profiles if missing).
                     # In CI, it's often set to true, expecting profiles to pre-exist.
    git_url: ENV["MATCH_GIT_URL"], # The URL of your private Git repository where match stores assets
    git_url_private_key: ENV["MATCH_PASSWORD"], # Password to decrypt the match git repository (if encrypted)
    keychain_name: ENV["KEYCHAIN_NAME"], # The name of the keychain created in your GitHub Actions workflow
    keychain_password: ENV["FASTLANE_KEYCHAIN_PASSWORD"], # The password for the keychain created in your CI workflow
    force: true, # Forces match to download/install the latest profiles/certificates, even if local copies exist.
                 # This is highly recommended for CI to ensure fresh assets.
    force_for_new_devices: true, # (Optional) Relevant for development/adhoc profiles to include new devices.
    verbose: true # Enable verbose logging for match to get detailed output during execution.
  )

  # Use the `gym` action to build your iOS application.
  # Gym orchestrates the `xcodebuild` command.
  gym(
    project: "SampleApp.xcodeproj", # Path to your Xcode project file
    scheme: "SampleApp", # The Xcode scheme to build
    clean: true, # Clean the build directory before building
    export_method: "development", # The export method must match the `type` used in `match`
    # Explicitly define export options, especially important for manual signing.
    export_options: {
      signingStyle: "manual", # Specify manual signing to use profiles provided by `match`
      provisioningProfiles: {
        # Map your app's bundle identifier to the exact name of the provisioning profile
        # that `match` generated and installed. This name usually follows the pattern:
        # "match <type> <bundle_identifier>"
        "com.yapsody.SampleApp" => "match Development com.yapsody.SampleApp"
      }
    },
    output_directory: "./build", # Directory where the exported IPA will be saved
    output_name: "SampleApp.ipa", # The filename for the generated IPA
    silent: false, # Disable silent mode to see full xcodebuild output, crucial for debugging build failures.
    # configuration: "Release" # (Optional) Specify the build configuration (e.g., Debug, Release)
  )

  # Use the `deliver` action to upload the built IPA to App Store Connect.
  # This step automatically runs only if `gym` (the build) was successful.
  deliver(
    ipa: "./build/SampleApp.ipa", # Path to the IPA file generated by `gym`
    skip_metadata: true, # Skip uploading metadata (like descriptions, keywords)
    skip_screenshots: true, # Skip uploading screenshots
    force: true, # Force an update if the app version already exists on App Store Connect
    api_key: api_key # Use the API key configured at the beginning of the Fastfile for authentication
  )
end
