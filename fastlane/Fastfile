platform :ios do
  desc "Run unit tests"
  lane :test do
    scan(
      project: "SampleApp.xcodeproj",
      scheme: "SampleApp",
      clean: true,
      devices: ["iPhone 15"],
      output_types: "junit",
      output_directory: "test_output"
    )
  end
  lane :build_only do
    # Create a temporary keychain
    increment_build_number(
      xcodeproj: "SampleApp.xcodeproj",
      build_number: Time.now.strftime("%Y%m%d%H%M") # Optional: makes it dynamic
    )
    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],  # name can be anything
      password: ENV['MATCH_PASSWORD'], # It should be same as we set at the time of profile creation
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )

    # Load the App Store Connect API key
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_B64'],
      duration: 1200,
      in_house: false,
      is_key_content_base64: true
    )

    # Fetch provisioning profiles & certificates using match
    match(
      type: "appstore",
      api_key: api_key,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV['MATCH_PASSWORD'],
      readonly: true,
      git_url: ENV["MATCH_GIT_URL"]
    )

    # Build the app
    build_app(
      project: "SampleApp.xcodeproj",
      scheme: "SampleApp",
      export_method: "app-store",
      output_directory: "./build",
      clean: true,
      export_options: {
        provisioningProfiles: {
          "com.yapsody.SampleApp" => "match Development com.yapsody.SampleApp"
        }
      }
    )

    upload_to_testflight(
      api_key: api_key,
      ipa: "./build/SampleApp.ipa"
    )


    # Delete temporary keychain
    delete_keychain(name: "ci_temp.keychain")
  end
end
